---
- hosts: lab
  become: true
  vars_files:
    - vars/default.yaml

  pre_tasks:
    - name: Test connection
      ping:
        data: Connection successful
      tags:
         - connection

  roles:
    - oefenweb.fail2ban

  vars:
    fail2ban_services:
      - name: sshd
        port: 22
        maxretry: 1
        bantime: -1

  tasks:
    - name: Update and install packages
      apt:
        name: [ 'apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common' , 'python3-pip', 'virtualenv', 'python3-setuptools', 'zsh']
        state: present
        update_cache: yes

    - name: Add docker GPG apt key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add docker repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: yes

    - name: Adding user to docker group
      user:
        name: "{{ username }}"
        groups: ["docker"]
        append: yes
    
    - name: Install docker module for python
      pip:
        name: docker

    - name: Download Offensive Docker image
      docker_image:
        name: "{{ docker_image }}"
        source: pull

    - name: Change default shell to zsh
      user:
        name: "{{ username }}"
        shell: /bin/zsh

    - name: Set TERM environment variable
      lineinfile:
        dest: /etc/environment
        line: 'TERM=xterm-256color'

    - name: Clone oh-my-tmux repository
      git:
        repo: 'https://github.com/gpakosz/.tmux.git'
        dest: /home/{{ username }}/.tmux
        depth: '1'
        force: yes

    - name: Clone oh-my-zsh repository
      git:
        repo: 'https://github.com/ohmyzsh/ohmyzsh.git'
        dest: /home/{{ username }}/.oh-my-zsh
        depth: '1'
        force: yes

    - name: Create a symbolic link for install oh-my-tmux
      file:
        src: /home/{{ username }}/.tmux/.tmux.conf
        dest: /home/{{ username }}/.tmux.conf
        owner: "{{ username }}"
        group: "{{ username }}"
        state: link
        force: yes

    - name: Copy oh-my-zsh configuration file to .zshrc
      copy:
        src: /home/{{ username }}/.tmux/.tmux.conf.local
        dest: /home/{{ username }}/
        remote_src: yes
        owner: "{{ username }}"
        mode: '0644'

    - name: Change oh-my-zsh ownership, group and permissions
      file:
        path: /home/{{ username }}/.oh-my-zsh
        state: directory
        recurse: yes
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: '0555'

    - name: Copy oh-my-zsh configuration file to .zshrc
      copy:
        src: /home/{{ username }}/.oh-my-zsh/templates/zshrc.zsh-template
        dest: /home/{{ username }}/.zshrc
        remote_src: yes
        owner: "{{ username }}"
        mode: '0644'

    - name: Download zsh-syntax-highlighting plugin
      git:
        repo: 'https://github.com/zsh-users/zsh-syntax-highlighting.git'
        dest: /home/{{ username }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
        depth: '1'
        force: yes

    - name: Download zsh-completions plugin
      git:
        repo: 'https://github.com/zsh-users/zsh-completions.git'
        dest: /home/{{ username }}/.oh-my-zsh/custom/plugins/zsh-completions
        depth: '1'
        force: yes

    - name: Download zsh-history-substring-search plugin
      git:
        repo: 'https://github.com/zsh-users/zsh-history-substring-search.git'
        dest: /home/{{ username }}/.oh-my-zsh/custom/plugins/zsh-history-substring-search
        depth: '1'
        force: yes

    - name: Download zsh-autosuggestions plugin
      git:
        repo: 'https://github.com/zsh-users/zsh-autosuggestions.git'
        dest: /home/{{ username }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions
        depth: '1'
        force: yes

    - name: Enable oh-my-zsh plugins
      lineinfile:
        path: /home/{{ username }}/.zshrc
        regexp: '^plugins=\('
        line: plugins=(git docker tmux ubuntu colored-man-pages zsh-syntax-highlighting zsh-completions history-substring-search zsh-autosuggestions)

    - name: zsh-completions configuration
      lineinfile:
        path: /home/{{ username }}/.zshrc
        state: present
        firstmatch: yes
        insertafter: '^plugins=\('
        line: autoload -U compinit && compinit

    - name: Configuration finished
      debug:
        msg: System configured correctly.